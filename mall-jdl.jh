entity UserInfo {
	accountId Long,
	shopId Long
}

entity MyAccount {
	balance BigDecimal,
	type AccountType
}

entity Company {
	code String required,
	name String,
	status CommonStatus
}

entity Department {
	code String required,
	name String,
	status CommonStatus
}

entity Office {
	code String required,
	name String,
	status CommonStatus
}

entity Address {
	line1 String,
	line2 String,
	line3 String,
	line4 String,
	city String,
	postalCode String
}

entity Country {
	code String required maxlength(2),
	label String maxlength(3),
	num String maxlength(3),
	name String maxlength(100) 
}

entity State {
	code String required maxlength(2),
	label String maxlength(3),
	name String maxlength(100) 
}

entity Shop {
	code String required,
	name String,
	description String,
	status CommonStatus,
	createdBy String,
	createdDate ZonedDateTime,
	lastModifiedBy String,
	lastModifiedDate ZonedDateTime
}

entity Delegation {
	from ZonedDateTime,
	to ZonedDateTime,
	type DelegationType,
	delegateId String, //Long
	status CommonStatus,
	createdBy String,
	createdDate ZonedDateTime,
	lastModifiedBy String,
	lastModifiedDate ZonedDateTime
}

enum DelegationType {
    ACCOUNT, COMPANY, DEPARTMENT, OFFICE
}

enum AccountType {
    PERSONAL, COMPANY
}

enum CommonStatus {
    ACTIVE, INACTIVE
}

entity Category {
	name String required,
	description String,
	status CategoryStatus,
	createdBy String,
	createdDate ZonedDateTime,
	lastModifiedBy String,
	lastModifiedDate ZonedDateTime
}

enum CategoryStatus {
    ACTIVE, RESTRICTED, INACTIVE
}

entity Product {
	name String required,
	code String,
	brand String,
	description String,
	content String,
	remark String,
	status ProductStatus,
	createdBy String,
	createdDate ZonedDateTime,
	lastModifiedBy String,
	lastModifiedDate ZonedDateTime
}

enum ProductStatus {
    ACTIVE, RESTRICTED, INACTIVE
}

entity ProductStyle {
	name String,
	code String,
	isDefault Boolean,
	type ProductStyleType
}

enum ProductStyleType {
    COLOR, SIZE
}

entity ProductItem {
	code String,
	isDefault Boolean,
	quantity Integer,
	currency CurrencyType,
	price BigDecimal
}

// Product status before or after is active
entity ProductHistory {
	productId Long,
	name String required,
	code String,
	brand String,
	description String,
	content String,
	remark String,
	status ProductStatus,
	createdBy String,
	createdDate ZonedDateTime
}

// Product status before or after is active
entity ProductStyleHistory {
	name String,
	code String,
	isDefault Boolean,
	type ProductStyleType,
	createdBy String,
	createdDate ZonedDateTime
}

// Product status before or after is active
entity ProductItemHistory {
	code String,
	isDefault Boolean,
	quantity Integer,
	currency CurrencyType,
	price BigDecimal,
	createdBy String,
	createdDate ZonedDateTime
}

entity Price {
	from ZonedDateTime,
	to ZonedDateTime,
	price BigDecimal,
	currency CurrencyType
}

entity Quantity {
	from ZonedDateTime,
	to ZonedDateTime,
	quantity Integer,
}

enum CurrencyType {
    HKD, CNY, USD, EUR, JPY, KRW, TWD
}

entity CurrencyRate {
	from ZonedDateTime,
	to ZonedDateTime,
	rate BigDecimal,
	sourceCurrency CurrencyType,
	targetCurrency CurrencyType
}

entity MyOrder {
	total BigDecimal,
	currency CurrencyType,
	remark String,
	status OrderStatus
}

enum OrderStatus {
    PENDING, COMFIRMED, COMPLETED, CANCELLED
}

entity OrderItem {
	quantity Integer,
	price BigDecimal,
	currency CurrencyType
}

entity OrderStatusHistory {
	effectiveDate ZonedDateTime,
	status OrderStatus
}

entity Url {
	entityType String,
	entityId Long,
	path String,
	fileName String,
	sequence Integer,
	description String,
	createdBy String,
	createdDate ZonedDateTime,
	lastModifiedBy String,
	lastModifiedDate ZonedDateTime
}

entity CreditCard {
	name String,
	value String,
	holderName String,
	expireDate ZonedDateTime
}

entity Shipping {
	price BigDecimal,
	currency CurrencyType,
	date ZonedDateTime,
	receiver String,
	contactNum String,
	email String,
	remark String,
	status ShippingStatus
}

entity ShippingType {
	name String,
	description String,
	price BigDecimal,
	currency CurrencyType
}

enum ShippingStatus {
	PENDING, SHIPPED, COMPLETED, CANCELLED
}

entity ShippingStatusHistory {
	effectiveDate ZonedDateTime,
	status ShippingStatus
}

entity Payment {
	amount BigDecimal,
	currency CurrencyType,
	type PaymentType,
	remark String,
	status PaymentStatus
}

entity PaymentCreditCard {
	name String,
	value String,
	holderName String,
	expireDate ZonedDateTime
}

enum PaymentType {
	CREDIT_CARD, DEBIT_CARD, PAYPAL, PAYME, BANK_TRANSFER, ACCOUNT
}

enum PaymentStatus {
	PENDING, PAID, CANCELLED
}

entity PaymentStatusHistory {
	effectiveDate ZonedDateTime,
	status PaymentStatus
}

relationship OneToOne {
	UserInfo{user(login)} to User,
	UserInfo{defaultAccount} to MyAccount,
	Office{address} to Address,
	ProductItem{color} to ProductStyle,
	ProductItem{size} to ProductStyle,
	OrderItem{productItem} to ProductItem,
	Shipping{order} to MyOrder,
	Shipping{shippingAddress} to Address,
	Shipping{billingAddress} to Address,
	Payment{order} to MyOrder,
	PaymentCreditCard{payment} to Payment
}

relationship OneToMany {
	MyAccount{delegation} to Delegation{account},
	Product{style} to ProductStyle{product},
	Product{item} to ProductItem{product},
	MyOrder{item} to OrderItem{order},
	MyOrder{statusHistory} to OrderStatusHistory{order},
	Shipping{statusHistory} to ShippingStatusHistory{shipping},
	ProductItem{price} to Price{item},
	ProductItem{quantity} to Quantity{item},
	Payment{statusHistory} to PaymentStatusHistory{payment}
}

relationship ManyToOne {
	MyAccount{company(code)} to Company{account},
	MyAccount{department(code)} to Department{account},
	MyAccount{office(code)} to Office{account},
	Company{parent} to Company,
	Department{parent} to Department,
	Address{country} to Country,
	Address{state} to State,
	State{country} to Country,
	Category{parent} to Category,
	Product{shop} to Shop,
	CreditCard{account} to MyAccount,
	MyOrder{account} to MyAccount,
	Shipping{type} to ShippingType

}

relationship ManyToMany {
	UserInfo{account} to MyAccount{userInfo(login)},
	Company{department(code)} to Department{company(code)},
	Company{office(code)} to Office{company(code)},
	Department{office(code)} to Office{department(code)},
	MyAccount{shop} to Shop{account},
	Category{product} to Product{category}
}

paginate UserInfo, MyAccount, Company, Department, Office, Country, State, Shop, Category, Product, ProductItem, MyOrder, OrderItem, Price, Quantity, Url, CreditCard, Shipping, ShippingType, Payment, PaymentCreditCard with pagination
paginate Address with pager
paginate Delegation, OrderStatusHistory, ProductHistory, ProductItemHistory, ShippingStatusHistory, PaymentStatusHistory with infinite-scroll
service UserInfo, MyAccount, Product, MyOrder, Shop, Url, Shipping, Payment, Address with serviceClass
dto UserInfo, MyAccount, Product, MyOrder, Shop, ProductItem, ProductStyle, Price, Quantity, Url, Shipping, Payment, Address with mapstruct
